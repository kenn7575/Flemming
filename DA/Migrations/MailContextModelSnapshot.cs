// <auto-generated />
using System;
using DA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DA.Migrations
{
    [DbContext(typeof(MailContext))]
    partial class MailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BL.CategorizedEmail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BodyContentType")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ConversationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CategorizedEmails");

                    b.HasDiscriminator().HasValue("CategorizedEmail");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BL.ContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("BL.Pilotage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisembarkationPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbarkationPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Eta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pilotage");
                });

            modelBuilder.Entity("BL.PilotageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("FaultsOrDeficiencies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HelcomNotificationRequired")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PilotageId")
                        .HasColumnType("int");

                    b.Property<int?>("VesselId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactDetailsId");

                    b.HasIndex("PilotageId");

                    b.HasIndex("VesselId");

                    b.ToTable("PilotageInfo");
                });

            modelBuilder.Entity("BL.Speed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Rpm")
                        .HasColumnType("int");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Speed");
                });

            modelBuilder.Entity("BL.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CallSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Draught")
                        .HasColumnType("float");

                    b.Property<int?>("GrossTonnage")
                        .HasColumnType("int");

                    b.Property<string>("ImoNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpeedId")
                        .HasColumnType("int");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpeedId");

                    b.ToTable("Vessel");
                });

            modelBuilder.Entity("BL.PilotageEmail", b =>
                {
                    b.HasBaseType("BL.CategorizedEmail");

                    b.Property<int>("PilotageInfoId")
                        .HasColumnType("int");

                    b.HasIndex("PilotageInfoId");

                    b.HasDiscriminator().HasValue("PilotageEmail");
                });

            modelBuilder.Entity("BL.PilotageInfo", b =>
                {
                    b.HasOne("BL.ContactDetails", "ContactDetails")
                        .WithMany()
                        .HasForeignKey("ContactDetailsId");

                    b.HasOne("BL.Pilotage", "Pilotage")
                        .WithMany()
                        .HasForeignKey("PilotageId");

                    b.HasOne("BL.Vessel", "Vessel")
                        .WithMany()
                        .HasForeignKey("VesselId");

                    b.Navigation("ContactDetails");

                    b.Navigation("Pilotage");

                    b.Navigation("Vessel");
                });

            modelBuilder.Entity("BL.Vessel", b =>
                {
                    b.HasOne("BL.Speed", "Speed")
                        .WithMany()
                        .HasForeignKey("SpeedId");

                    b.Navigation("Speed");
                });

            modelBuilder.Entity("BL.PilotageEmail", b =>
                {
                    b.HasOne("BL.PilotageInfo", "PilotageInfo")
                        .WithMany()
                        .HasForeignKey("PilotageInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PilotageInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
