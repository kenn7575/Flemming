@using Microsoft.EntityFrameworkCore
@using Microsoft.Identity.Abstractions;
@using Microsoft.Identity.Web;
@using System.Text.Json
@inject IDownstreamApi downstreamApi
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler
@using DA;
@using BL;
@using static BL.CategorizedEmail
@inject NavigationManager Navigation





<AuthorizeView>
    <Authorized>
        Authorized
        @if (pilotageEmail != null)
        {
            <div class="px-4">
                <UI.Components.TabBar />

                <div class="overflow-x-auto">

                    <table class="table">
                       
                        <thead>
                            <tr class="bg-neutral/20">
                                <th></th>
                                <th>ID</th>
                                <th>Status</th>
                                <th>Afsender</th>
                                <th>Modtagelse tidspunkt</th>
                                <th>Type</th>
                                <th>
                                    Se email

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                           
                            @foreach (var email in pilotageEmail)
                            {


                                <tr @onclick="() => NavigateToDetails(email.ID.ToString())" class="hover:bg-neutral/5 transition-color duration-200">

                                    <th>
                                        <input type="checkbox" class="checkbox" />
                                    </th>
                                    <th>
                                        @email.ID
                                    </th>
                                    <td>Modtaget</td>
                                    <td>@email.From</td>
                                    <td>@email.SentDateTime</td>
                                    <td>
                                        <div class="badge badge-primary badge-outline">
                                            @(((EmailCategoriesDisplay)email.CategoryId).ToString().Replace("_", " "))
                                        </div>

                                    </td>
                                    <td>
                                        @if (email.ConversationId !=null)
                                        {
                                            
                                        <a
                                            href=@($"https://outlook.office.com/mail/inbox/id/{Uri.EscapeDataString(email.ConversationId)}")>

                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                                stroke-linejoin="round" class="lucide lucide-mail-search">
                                                <path d="M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5" />
                                                <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
                                                <path d="M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" />
                                                <circle cx="18" cy="18" r="3" />
                                                <path d="m22 22-1.5-1.5" />
                                            </svg>

                                        </a>
                                        }
                                    </td>
                                </tr>

                            }



                        </tbody>
                    </table>
                </div>
            </div>


        }




        @code {
            private List<PilotageEmail>? pilotageEmail = null;
 private void NavigateToDetails(string id)
    {
        // Navigate to a new URL
        Navigation.NavigateTo("/Emails/" + id);
    }
            protected override async Task OnInitializedAsync()
            {

                try
                {
                    using (var context = new MailContext())
                    {

                    pilotageEmail = await context.PilotageEmails.ToListAsync();
                        Console.WriteLine($"{pilotageEmail.Count} emails");


                    }
                }
                catch (Exception ex)
                {
                    ConsentHandler.HandleException(ex);
                }
            }
        }
    </Authorized>
    <NotAuthorized>
        NotAuthorized
    </NotAuthorized>
</AuthorizeView>
